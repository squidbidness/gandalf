Pay attention to use constexpr where possible and reasonable

#define macros are NOT forbidden for boiler-plate avoidance and
code-generation purposes: these are regarded as legitimate coding paradigms
which unfortunately C and C++ do not support all that well outside the
pre-processor.  Consider if something is possible with
template metaprogramming, the Curiously Recurring Template Pattern, or other
type-safe and hygenic techniques.  But we don't have to resort to truly
insane template-foo if something is more reasonable as a macro.

Avoid non-const lvalue references as function output parameters; use non-const
raw pointers instead, since the '&' addres-of operator at call sites is a
handy clue that the argument may be modified by the function call.

However, try to avoid output parameters; in most cases favor declaring a
struct and returning it from a function when multiple return values are
wanted.
